[app:VoteIT]
use = egg:voteit.core

#Pyramid defaults
pyramid.reload_templates = true
pyramid.debug_authorization = false
pyramid.debug_notfound = false
pyramid.debug_routematch = false
pyramid.debug_templates = true
pyramid.includes =
    voteit.core.testing_helpers.printing_mailer

#Transaction manager config for package: pyramid_tm
tm.commit_veto = pyramid_tm.default_commit_veto
#ZODB config for package: pyramid_zodbconn
zodbconn.uri = file://%(here)s/../var/Data.fs?connection_cache_size=20000

#VoteIT/Arche settings
default_locale_name = sv
arche.timezone = Europe/Stockholm
arche.salt_file = %(here)s/../var/salt.txt
arche.cache_max_age = 7200
arche.hash_method = voteit.core.security.get_sha_password
default_poll_method = schulze_stv


#List any extra plugins you'll want to use here
plugins = 
    voteit.core.plugins.majority_poll
    voteit.schulze
    voteit.dutt
    voteit.core.plugins.gravatar_profile_image
    voteit.livewidget
    voteit.irl
    voteit.irl.plugins.gender
    voteit.debate
    voteit.debate.plugins.female_priority
    voteit.printable
    sverok_rm
    sverok_rm.speaker_feed


[pipeline:main]
pipeline =
    fanstatic
    VoteIT


[filter:fanstatic]
use = egg:fanstatic#fanstatic
#debug = True
bottom = True


[server:main]
use = egg:waitress#main
host = 0.0.0.0
port = 6543
threads = 1
url_scheme = http


# Begin logging configuration
[loggers]
keys = root, voteit.core


[handlers]
keys = console


[formatters]
keys = generic


[logger_root]
level = INFO
handlers = console


[logger_voteit.core]
level = DEBUG
handlers =
qualname = voteit.core


[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic


[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s][%(threadName)s] %(message)s

# End logging configuration
